{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-field/search-field.component.jsx","components/navbar/navbar.component.jsx","components/profile/profile.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","candidate","className","src","Image","alt","name","CardList","props","candidates","map","to","id","Number","SearchField","placeholder","type","onChange","handleChange","Navbar","Profile","useParams","console","log","filter","item","onClick","handleAcceptance","handleRejection","App","history","useHistory","useState","setCandidates","useEffect","fetch","then","response","json","raw_data","shortlisted","rejected","data","searchField","setSearchField","filteredCandidates","toLowerCase","includes","shortlistedCandidates","rejectedCandidates","event","target","value","path","exact","updated","push","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d43adec9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./card.style.css\";\r\n\r\nconst Card = ({ candidate }) => {\r\n\treturn (\r\n\t\t<div className=\"card-container\">\r\n\t\t\t<img src={candidate.Image} alt=\"\" />\r\n\t\t\t<h2>{candidate.name}</h2>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport \"./card-list.style.css\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport Card from \"../card/card.component\";\r\n\r\nconst CardList = (props) => {\r\n\treturn (\r\n\t\t<div className=\"card-list\">\r\n\t\t\t{props.candidates.map((candidate) => (\r\n\t\t\t\t<div key={candidate.id}>\r\n\t\t\t\t\t<Link to={`/${candidate.id}`}>\r\n\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\tcandidate={candidate}\r\n\t\t\t\t\t\t\tkey={Number(candidate.id)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</div>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default CardList;\r\n","import React from \"react\";\r\nimport \"./search-field.style.css\";\r\n\r\nconst SearchField = (props) => {\r\n\treturn (\r\n\t\t<input\r\n\t\t\tclassName=\"search\"\r\n\t\t\tplaceholder=\"Search Candidates\"\r\n\t\t\ttype=\"search\"\r\n\t\t\tonChange={props.handleChange}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default SearchField;\r\n","import React from \"react\";\r\nimport \"./navbar.style.css\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport SearchField from \"../search-field/search-field.component\";\r\n\r\nconst Navbar = (props) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<nav>\r\n\t\t\t\t<Link to=\"/\">\r\n\t\t\t\t\t<h2 className=\"title\">Candidate Screener</h2>\r\n\t\t\t\t</Link>\r\n\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Link to=\"/shortlisted\">Short Listed</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Link to=\"/rejected\">Rejected</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<SearchField handleChange={props.handleChange} />\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t</nav>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport \"./profile.style.css\";\r\n\r\nimport { useParams } from \"react-router-dom\";\r\nimport Card from \"../card/card.component\";\r\n\r\nconst Profile = (props) => {\r\n\tconst id = useParams().id;\r\n\tconsole.log(id);\r\n\tconst candidate = props.candidates.filter((item) => item.id === id);\r\n\tconsole.log(candidate);\r\n\treturn (\r\n\t\t<div className=\"profile\">\r\n\t\t\t<div className=\"card\">\r\n\t\t\t\t<Card candidate={candidate[0]} />\r\n\t\t\t</div>\r\n\t\t\t<div className=\"buttons\">\r\n\t\t\t\t<button\r\n\t\t\t\t\tonClick={() => props.handleAcceptance(id)}\r\n\t\t\t\t\tclassName=\"button\"\r\n\t\t\t\t\tid=\"shortlist\"\r\n\t\t\t\t>\r\n\t\t\t\t\tShort List\r\n\t\t\t\t</button>\r\n\t\t\t\t<button\r\n\t\t\t\t\tonClick={() => props.handleRejection(id)}\r\n\t\t\t\t\tclassName=\"button\"\r\n\t\t\t\t\tid=\"reject\"\r\n\t\t\t\t>\r\n\t\t\t\t\tReject\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nimport { Route, Switch, useHistory } from \"react-router-dom\";\n\nimport CardList from \"./components/card-list/card-list.component\";\nimport Navbar from \"./components/navbar/navbar.component\";\nimport Profile from \"./components/profile/profile.component\";\n\nfunction App() {\n\tconst history = useHistory();\n\t// #############################################################################\n\t// Creating and setting the Candidates List\n\tconst [candidates, setCandidates] = useState([]);\n\tuseEffect(() => {\n\t\tfetch(\n\t\t\t\"https://s3-ap-southeast-1.amazonaws.com/he-public-data/users49b8675.json\"\n\t\t)\n\t\t\t.then((response) => response.json())\n\t\t\t.then((raw_data) =>\n\t\t\t\traw_data.map((item) => ({\n\t\t\t\t\t...item,\n\t\t\t\t\tshortlisted: false,\n\t\t\t\t\trejected: false,\n\t\t\t\t}))\n\t\t\t)\n\t\t\t.then((data) => setCandidates(data));\n\t}, []);\n\t// #############################################################################\n\n\t//###############################################################################\n\t// Handling the search functionality\n\tconst [searchField, setSearchField] = useState(\"\");\n\tconst handleChange = (event) => {\n\t\tsetSearchField(event.target.value);\n\t};\n\n\tconst filteredCandidates = candidates.filter(\n\t\t(candidate) =>\n\t\t\tcandidate.name.toLowerCase().includes(searchField.toLowerCase()) &&\n\t\t\tcandidate.shortlisted === false &&\n\t\t\tcandidate.rejected === false\n\t);\n\t//###############################################################################\n\n\t// Shortlisted Candidates\n\tconst shortlistedCandidates = candidates.filter(\n\t\t(candidate) => candidate.shortlisted === true\n\t);\n\n\tconst rejectedCandidates = candidates.filter(\n\t\t(candidate) => candidate.rejected === true\n\t);\n\n\tconst handleAcceptance = (id) => {\n\t\tconst updated = candidates.map((candidate) => {\n\t\t\tif (candidate.id === id) {\n\t\t\t\tcandidate.shortlisted = true;\n\t\t\t\tcandidate.rejected = false;\n\t\t\t}\n\t\t\treturn candidate;\n\t\t});\n\t\tsetCandidates(updated);\n\t\thistory.push(\"/\");\n\t};\n\tconst handleRejection = (id) => {\n\t\tconst updated = candidates.map((candidate) => {\n\t\t\tif (candidate.id === id) {\n\t\t\t\tcandidate.shortlisted = false;\n\t\t\t\tcandidate.rejected = true;\n\t\t\t}\n\t\t\treturn candidate;\n\t\t});\n\t\tsetCandidates(updated);\n\t\thistory.push(\"/\");\n\t};\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Navbar handleChange={handleChange} />\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/\" exact>\n\t\t\t\t\t<CardList candidates={filteredCandidates} />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/shortlisted\" exact>\n\t\t\t\t\t<CardList candidates={shortlistedCandidates} />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/rejected\" exact>\n\t\t\t\t\t<CardList candidates={rejectedCandidates} />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/:id\">\n\t\t\t\t\t<Profile\n\t\t\t\t\t\tcandidates={candidates}\n\t\t\t\t\t\thandleAcceptance={handleAcceptance}\n\t\t\t\t\t\thandleRejection={handleRejection}\n\t\t\t\t\t/>\n\t\t\t\t</Route>\n\t\t\t</Switch>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n\t<BrowserRouter>\r\n\t\t<React.StrictMode>\r\n\t\t\t<App />\r\n\t\t</React.StrictMode>\r\n\t</BrowserRouter>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}